"use strict";

document.addEventListener("DOMContentLoaded", function () {
  window.addEventListener("orientationchange", function () {
    location.reload();
  });

  // custom scroll
  var scrollBar = document.querySelector(".table__scrollbar");
  var scrollBarThumb = document.querySelector(".table__scrollbar-thumb");
  var scrollElem = document.querySelector('.table__body-scroll');
  var scrollContainer = document.querySelector('.table__body');
  var scrollBarHeight = scrollContainer.clientHeight;
  var scrollBarThumbHeight;
  if (scrollBarHeight >= scrollElem.clientHeight) {
    scrollBar.style.display = "none";
  } else {
    scrollBarThumbHeight = scrollBarHeight * scrollContainer.clientHeight / scrollElem.scrollHeight;
  }
  scrollBarThumb.style.height = "".concat(scrollBarThumbHeight, "px");
  scrollBar.style.height = "".concat(scrollBarHeight, "px");
  var currentScrollDastance = 0;
  scrollContainer.addEventListener("scroll", function () {
    currentScrollDastance = scrollContainer.scrollTop * 100 / scrollContainer.clientHeight;
    scrollBarThumb.style.top = "".concat(scrollBarThumbHeight / 100 * currentScrollDastance, "px");
  });
  //scroll anim

  function isInViewport(element, visibilityThreshold) {
    var rect = element.getBoundingClientRect();
    var windowHeight = window.innerHeight || document.documentElement.clientHeight;
    var windowWidth = window.innerWidth || document.documentElement.clientWidth;
    var visibleHeight = Math.min(rect.bottom, windowHeight) - Math.max(rect.top, 0);
    var visibleWidth = Math.min(rect.right, windowWidth) - Math.max(rect.left, 0);
    var elementHeight = rect.height;
    var elementWidth = rect.width;
    var visibleArea = visibleHeight * visibleWidth;
    var totalArea = elementHeight * elementWidth;
    var visiblePercentage = visibleArea / totalArea;
    return visiblePercentage >= visibilityThreshold;
  }
  function addClassOnVisibility(element, className, visibilityThreshold) {
    window.addEventListener('scroll', function () {
      if (isInViewport(element, visibilityThreshold)) {
        element.classList.add(className);
      }
    });
    document.addEventListener("DOMContentLoaded", function () {
      if (isInViewport(element, visibilityThreshold)) {
        element.classList.add(className);
      }
    });
  }
  var phoneCard = document.querySelector(".card__phone-img");
  var phoneLink = document.querySelector(".card__phone-link");
  var phoneCardDecor = document.querySelector(".card__phone-img-decor");
  var phoneLinkDecor = document.querySelector(".card__phone-link-decor");
  var infoBulbPers = document.querySelector(".info__buble-pers");
  var infoBulbTitle = document.querySelector(".info__buble-title");
  addClassOnVisibility(phoneCard, "phoneCardAnim", 0.3);
  addClassOnVisibility(phoneLink, "phoneLinkAnim", 0.3);
  addClassOnVisibility(phoneCardDecor, "phoneDecorAnim", 0.3);
  addClassOnVisibility(phoneLinkDecor, "phoneDecorAnim", 0.3);
  addClassOnVisibility(infoBulbPers, "scaleAnim", 0.3);
  addClassOnVisibility(infoBulbTitle, "scaleAnim", 0.3);

  // bottom link adapt

  var cardBottom = document.querySelector(".card__bottom");
  var cardBottomWrap = document.querySelector(".card__phone");
  if (window.innerWidth <= 600) {
    if (window.innerWidth > cardBottomWrap.clientWidth) {
      cardBottom.style.left = "-".concat(window.innerWidth - cardBottomWrap.clientWidth, "px");
    } else {
      cardBottom.style.left = "".concat(Math.abs(window.innerWidth - cardBottomWrap.clientWidth), "px");
    }
  }
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
